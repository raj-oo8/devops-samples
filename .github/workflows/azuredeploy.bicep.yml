name: Azure Bicep Provision and Deploy
on: workflow_dispatch

jobs:

  #====== Provision and Deploy ======#
  provision_and_deploy:
    name: "Provision and Deploy"
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: '8.0'
      AZURE_FUNCTIONAPP_NAME: 'SignalRFunctions'
      AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/Azure.Functions'

    steps:

      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Create or Update Resource Group
      - name: Create or Update Resource Group
        run: |
          az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_LOCATION }}

      # Deploy Bicep template
      - name: Deploy Bicep Template
        id: bicep
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          template: ./infra/bicep/main.bicep
          deploymentMode: Incremental

      # Deploy to Azure Functions
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ steps.bicep.outputs.functionAppPublishProfile }}
      
      # Deploy to Azure Static Web Apps
      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.bicep.outputs.staticSiteDeploymentToken }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '/src/Blazor.WebAssembly'
          output_location: 'wwwroot'
          app_build_command: 'dotnet publish -c Release'

      # Logout of Azure
      - name: Logout of Azure
        run: |
          az logout
