@page "/counter"
@using Microsoft.AspNetCore.SignalR.Client
@inject IConfiguration Configuration
@implements IAsyncDisposable

<PageTitle>Counter</PageTitle>
<h1>Counter</h1>
<p role="status">Current count: <FluentBadge Appearance="Appearance.Neutral">@currentCount</FluentBadge></p>
<FluentButton Appearance="Appearance.Accent" @onclick="IncrementCount">Click me</FluentButton>

@code {
    private int currentCount = 0;
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var negotiateUrl = Configuration["SignalR:Url"];

            if (string.IsNullOrEmpty(negotiateUrl))
            {
                throw new InvalidOperationException("SignalR negotiate URL is not configured.");
            }

            hubConnection = new HubConnectionBuilder()
                .WithUrl(negotiateUrl)
                .Build();

            hubConnection.On<int>("ReceiveCount", (count) =>
            {
                currentCount = count;
                InvokeAsync(StateHasChanged);
            });

            await hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            // Log the exception or handle it as needed
            Console.Error.WriteLine($"Error initializing SignalR connection: {ex.Message}");
        }
    }

    private void IncrementCount()
    {
        currentCount++; // Increment the counter manually
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}